1. vanilla CSS
여러 파일로 나눠서 import 해도, vite가 css를 주입시켜준다. 
- 장점 : 
 jsx에서 css를 가져오면 곧바로 적용 된다.
 쉽게 동적 스타일 적용이가능
- 단점 : 
 css규칙이 컴포넌트간에 충돌이 발생할 수 있다.(스코핑되지 않음)
 => 인라인 스타일은 스코핑 하고, 모든요소를 개별로 설정해 소스용량이 커진다.

2. CSS Modules(Scope)
vanilla css 로 적용가능하고 스코핑이 가능하다. (빌드가 되야한다)
빌드과정에서 그 컴포넌트에서만 사용하가능 css로 이름이 변경된다.(exL: paragraph => _paragraph_1wgmr_28)
- 장점 : 
 css코드가 jsx에서 독립
 스코프 추가 가능
- 단점 : 
 많은 css파일이 생긴다.(XXX.module.css)

3. Styled Components(CSS-in-JS)
내장 label을 설정하고 거기에 모든 컴포넌트에서 받은 속성을 전달한다.
조건부 스타일링 가능
- 장점 : 
 빠르고 쉽게 에플리케이션 추가가능.
 리액트와 비슷하다
 스코프지정가능
- 단점 : 
 css를 알아야함.
 리액트와 css코드가 한곳에있음
 작은 래핑컴포넌트가 많이생김.

4. Tailwind CSS
소규모 유틸리티 클래스를 추가하여 디자인을 하는거싱 본 아이디어이다.
- 장점 : 
 컴포넌트를 유틸리티요소처럼 만들 수 있다.
 빠르게 개발 가능하다.
 스타일 겹침 피할수있음.
 개인화, 맞춤화, 추가 할 수 있음.
 커스텀 할 수 있음. 
- 단점 : 
클래스명이 길어진다.